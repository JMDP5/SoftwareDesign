/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.panel.zadatak;

import domen.Radnik;
import domen.Zadatak;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import validacija.Validacija;
import view.kontorler.menadzer.EvidentiranjeKontroler;
import view.konroler.opstikontorler.OpstiKontroler;
import view.panel.opstaekranskaforma.OpstaEkranskaForma;

/**
 *
 * @author aleksandar
 */
public class EvidentiranjePanel extends javax.swing.JPanel implements OpstaEkranskaForma {

    EvidentiranjeKontroler kontroler;

    /**
     * Creates new form EvidentiranjePanel
     */
    public EvidentiranjePanel() {
        initComponents();
        kontroler = new EvidentiranjeKontroler(this);
        jButtonEvidentiraj.setEnabled(false);
        popuniCombo();
        postaviDatum();
    }

    public Object getSelectedZadatak() {
        return jComboBoxZadaci.getSelectedItem();
    }

    public String getKomentar() {
        return jTextAreaKomentar.getText();
    }

    public void setKomentar(String kom) {
        this.jTextAreaKomentar.setText(kom);
    }

    public Date getDatum() {
        Date d = null;
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        if (jTextFieldDatum.getText().isEmpty()) {
            try {
                d = df.parse("2014-12-23");
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
        } else {
            String sDate = jTextFieldDatum.getText();
            try {
                d = df.parse(sDate);
            } catch (ParseException ex) {
                ex.printStackTrace();
            }
        }
        return d;
    }

    public String getID() {
        return jTextFieldID.getText();
    }

    public void setID(String id) {
        this.jTextFieldID.setText(id);
    }

    public String getOcena() {
        return jTextFieldOcena.getText();
    }

    public void setOcena(String ocena) {
        this.jTextFieldOcena.setText(ocena);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonEvidentiraj = new javax.swing.JButton();
        jComboBoxZadaci = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaKomentar = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldOcena = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldDatum = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButtonKreirajEvidenciju = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonEvidentiraj.setText("Evidentiraj");
        jButtonEvidentiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEvidentirajActionPerformed(evt);
            }
        });
        add(jButtonEvidentiraj, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 70, 128, 30));

        add(jComboBoxZadaci, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 32, 303, -1));

        jTextAreaKomentar.setColumns(20);
        jTextAreaKomentar.setRows(5);
        jScrollPane1.setViewportView(jTextAreaKomentar);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 193, 224, -1));

        jLabel2.setText("Datum evidentiranja:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 112, -1, -1));

        jLabel1.setText("Zadaci:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 36, -1, -1));
        add(jTextFieldOcena, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 153, 228, -1));

        jLabel3.setText("Ocena:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 153, -1, -1));

        jTextFieldDatum.setEditable(false);
        jTextFieldDatum.setText(" ");
        add(jTextFieldDatum, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 107, 228, -1));

        jLabel4.setText("Komentar:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 201, -1, -1));

        jButtonKreirajEvidenciju.setText("Kreiraj Evidenciju");
        jButtonKreirajEvidenciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKreirajEvidencijuActionPerformed(evt);
            }
        });
        add(jButtonKreirajEvidenciju, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, -1, -1));

        jLabel5.setText("ID:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 72, -1, -1));

        jTextFieldID.setEnabled(false);
        add(jTextFieldID, new org.netbeans.lib.awtextra.AbsoluteConstraints(124, 67, 303, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonKreirajEvidencijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKreirajEvidencijuActionPerformed
        try {
            kontroler.kreirajNovuEvidenciju();
            jButtonEvidentiraj.setEnabled(true);
        } catch (IOException | ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonKreirajEvidencijuActionPerformed

    private void jButtonEvidentirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEvidentirajActionPerformed
        if (!Validacija.formatBrojaOK(getOcena())) {
            JOptionPane.showMessageDialog(this, "Ocena mora biti broj!");
            return;
        }
        try {
            kontroler.sacuvajEvidenciju();
        } catch (IOException | ClassNotFoundException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButtonEvidentirajActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEvidentiraj;
    private javax.swing.JButton jButtonKreirajEvidenciju;
    private javax.swing.JComboBox jComboBoxZadaci;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaKomentar;
    private javax.swing.JTextField jTextFieldDatum;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldOcena;
    // End of variables declaration//GEN-END:variables

    private void popuniCombo() {
        List<Zadatak> zadaci;
        try {
            zadaci = kontroler.vratiZadatke();
            jComboBoxZadaci.setModel(new DefaultComboBoxModel(zadaci.toArray()));
        } catch (IOException | ClassNotFoundException ex) {
            ex.printStackTrace();
        }

    }

    private void postaviDatum() {
        Date danas = new Date();
        SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
        jTextFieldDatum.setText(sf.format(danas));
    }

}
